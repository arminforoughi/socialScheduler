{"ast":null,"code":"var _jsxFileName = \"/Users/arminforoughi/Documents/socialScheduler/frontend/src/components/Calendar/PostingCalendar.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Calendar, dateFnsLocalizer } from 'react-big-calendar';\nimport format from 'date-fns/format';\nimport parse from 'date-fns/parse';\nimport startOfWeek from 'date-fns/startOfWeek';\nimport getDay from 'date-fns/getDay';\nimport 'react-big-calendar/lib/css/react-big-calendar.css';\nimport { Dialog, TextField, Button, Select, MenuItem } from '@mui/material';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst locales = {\n  'en-US': require('date-fns/locale/en-US')\n};\nconst localizer = dateFnsLocalizer({\n  format,\n  parse,\n  startOfWeek,\n  getDay,\n  locales\n});\nconst PostingCalendar = () => {\n  _s();\n  const [events, setEvents] = useState([]);\n  const [openDialog, setOpenDialog] = useState(false);\n  const [newPost, setNewPost] = useState({\n    title: '',\n    content: '',\n    frequency: 'weekly',\n    scheduledDate: new Date()\n  });\n  useEffect(() => {\n    fetchPosts();\n  }, []);\n  const fetchPosts = async () => {\n    try {\n      const response = await axios.get('/api/calendar/posts');\n      setEvents(response.data.map(post => ({\n        title: post.title,\n        start: new Date(post.scheduledDate),\n        end: new Date(post.scheduledDate),\n        resource: post\n      })));\n    } catch (error) {\n      console.error('Error fetching posts:', error);\n    }\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    try {\n      await axios.post('/api/calendar/posts', newPost);\n      setOpenDialog(false);\n      fetchPosts();\n    } catch (error) {\n      console.error('Error creating post:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      height: '500px'\n    },\n    children: [/*#__PURE__*/_jsxDEV(Button, {\n      variant: \"contained\",\n      onClick: () => setOpenDialog(true),\n      style: {\n        marginBottom: '20px'\n      },\n      children: \"Create New Post\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Calendar, {\n      localizer: localizer,\n      events: events,\n      startAccessor: \"start\",\n      endAccessor: \"end\",\n      style: {\n        margin: '50px'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Dialog, {\n      open: openDialog,\n      onClose: () => setOpenDialog(false),\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        style: {\n          padding: '20px'\n        },\n        children: [/*#__PURE__*/_jsxDEV(TextField, {\n          label: \"Title\",\n          value: newPost.title,\n          onChange: e => setNewPost({\n            ...newPost,\n            title: e.target.value\n          }),\n          fullWidth: true,\n          margin: \"normal\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          label: \"Content\",\n          value: newPost.content,\n          onChange: e => setNewPost({\n            ...newPost,\n            content: e.target.value\n          }),\n          fullWidth: true,\n          margin: \"normal\",\n          multiline: true,\n          rows: 4\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Select, {\n          value: newPost.frequency,\n          onChange: e => setNewPost({\n            ...newPost,\n            frequency: e.target.value\n          }),\n          fullWidth: true,\n          margin: \"normal\",\n          children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n            value: \"daily\",\n            children: \"Daily\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n            value: \"weekly\",\n            children: \"Weekly\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n            value: \"monthly\",\n            children: \"Monthly\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          type: \"submit\",\n          variant: \"contained\",\n          color: \"primary\",\n          children: \"Create Post\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 5\n  }, this);\n};\n_s(PostingCalendar, \"9p5SrjDYvXQ13UySG2DJmWrupn8=\");\n_c = PostingCalendar;\nexport default PostingCalendar;\nvar _c;\n$RefreshReg$(_c, \"PostingCalendar\");","map":{"version":3,"names":["React","useState","useEffect","Calendar","dateFnsLocalizer","format","parse","startOfWeek","getDay","Dialog","TextField","Button","Select","MenuItem","axios","jsxDEV","_jsxDEV","locales","require","localizer","PostingCalendar","_s","events","setEvents","openDialog","setOpenDialog","newPost","setNewPost","title","content","frequency","scheduledDate","Date","fetchPosts","response","get","data","map","post","start","end","resource","error","console","handleSubmit","e","preventDefault","style","height","children","variant","onClick","marginBottom","fileName","_jsxFileName","lineNumber","columnNumber","startAccessor","endAccessor","margin","open","onClose","onSubmit","padding","label","value","onChange","target","fullWidth","multiline","rows","type","color","_c","$RefreshReg$"],"sources":["/Users/arminforoughi/Documents/socialScheduler/frontend/src/components/Calendar/PostingCalendar.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Calendar, dateFnsLocalizer } from 'react-big-calendar';\nimport format from 'date-fns/format';\nimport parse from 'date-fns/parse';\nimport startOfWeek from 'date-fns/startOfWeek';\nimport getDay from 'date-fns/getDay';\nimport 'react-big-calendar/lib/css/react-big-calendar.css';\nimport { Dialog, TextField, Button, Select, MenuItem } from '@mui/material';\nimport axios from 'axios';\n\nconst locales = {\n  'en-US': require('date-fns/locale/en-US')\n};\n\nconst localizer = dateFnsLocalizer({\n  format,\n  parse,\n  startOfWeek,\n  getDay,\n  locales\n});\n\nconst PostingCalendar = () => {\n  const [events, setEvents] = useState([]);\n  const [openDialog, setOpenDialog] = useState(false);\n  const [newPost, setNewPost] = useState({\n    title: '',\n    content: '',\n    frequency: 'weekly',\n    scheduledDate: new Date()\n  });\n\n  useEffect(() => {\n    fetchPosts();\n  }, []);\n\n  const fetchPosts = async () => {\n    try {\n      const response = await axios.get('/api/calendar/posts');\n      setEvents(response.data.map(post => ({\n        title: post.title,\n        start: new Date(post.scheduledDate),\n        end: new Date(post.scheduledDate),\n        resource: post\n      })));\n    } catch (error) {\n      console.error('Error fetching posts:', error);\n    }\n  };\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    try {\n      await axios.post('/api/calendar/posts', newPost);\n      setOpenDialog(false);\n      fetchPosts();\n    } catch (error) {\n      console.error('Error creating post:', error);\n    }\n  };\n\n  return (\n    <div style={{ height: '500px' }}>\n      <Button \n        variant=\"contained\" \n        onClick={() => setOpenDialog(true)}\n        style={{ marginBottom: '20px' }}\n      >\n        Create New Post\n      </Button>\n\n      <Calendar\n        localizer={localizer}\n        events={events}\n        startAccessor=\"start\"\n        endAccessor=\"end\"\n        style={{ margin: '50px' }}\n      />\n\n      <Dialog open={openDialog} onClose={() => setOpenDialog(false)}>\n        <form onSubmit={handleSubmit} style={{ padding: '20px' }}>\n          <TextField\n            label=\"Title\"\n            value={newPost.title}\n            onChange={(e) => setNewPost({...newPost, title: e.target.value})}\n            fullWidth\n            margin=\"normal\"\n          />\n          <TextField\n            label=\"Content\"\n            value={newPost.content}\n            onChange={(e) => setNewPost({...newPost, content: e.target.value})}\n            fullWidth\n            margin=\"normal\"\n            multiline\n            rows={4}\n          />\n          <Select\n            value={newPost.frequency}\n            onChange={(e) => setNewPost({...newPost, frequency: e.target.value})}\n            fullWidth\n            margin=\"normal\"\n          >\n            <MenuItem value=\"daily\">Daily</MenuItem>\n            <MenuItem value=\"weekly\">Weekly</MenuItem>\n            <MenuItem value=\"monthly\">Monthly</MenuItem>\n          </Select>\n          <Button type=\"submit\" variant=\"contained\" color=\"primary\">\n            Create Post\n          </Button>\n        </form>\n      </Dialog>\n    </div>\n  );\n};\n\nexport default PostingCalendar; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}