{"ast":null,"code":"var _jsxFileName = \"/Users/arminforoughi/Documents/socialScheduler/frontend/src/components/ImageGenerator/ImageGenerator.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { TextField, Button, Paper, Typography, Grid } from '@mui/material';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ImageGenerator = () => {\n  _s();\n  const [prompt, setPrompt] = useState('');\n  const [images, setImages] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const generateImage = async () => {\n    setLoading(true);\n    try {\n      const response = await axios.post('/api/images/generate', {\n        prompt\n      });\n      setImages(response.data.images);\n    } catch (error) {\n      console.error('Error generating image:', error);\n    }\n    setLoading(false);\n  };\n  return /*#__PURE__*/_jsxDEV(Paper, {\n    style: {\n      padding: '20px',\n      maxWidth: '800px',\n      margin: '20px auto'\n    },\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h5\",\n      gutterBottom: true,\n      children: \"Image Generator\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TextField, {\n      fullWidth: true,\n      label: \"Describe the image you want to create\",\n      value: prompt,\n      onChange: e => setPrompt(e.target.value),\n      margin: \"normal\",\n      multiline: true,\n      rows: 3\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      variant: \"contained\",\n      onClick: generateImage,\n      disabled: loading,\n      style: {\n        marginTop: '20px'\n      },\n      children: \"Generate Image\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      spacing: 2,\n      style: {\n        marginTop: '20px'\n      },\n      children: images.map((image, index) => /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 6,\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: image,\n          alt: `Generated ${index}`,\n          style: {\n            width: '100%'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 13\n        }, this)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }, this);\n};\n_s(ImageGenerator, \"lpTXTQ+Y7g7n+UOISKPAugTtaRQ=\");\n_c = ImageGenerator;\nexport default ImageGenerator;\nvar _c;\n$RefreshReg$(_c, \"ImageGenerator\");","map":{"version":3,"names":["React","useState","TextField","Button","Paper","Typography","Grid","axios","jsxDEV","_jsxDEV","ImageGenerator","_s","prompt","setPrompt","images","setImages","loading","setLoading","generateImage","response","post","data","error","console","style","padding","maxWidth","margin","children","variant","gutterBottom","fileName","_jsxFileName","lineNumber","columnNumber","fullWidth","label","value","onChange","e","target","multiline","rows","onClick","disabled","marginTop","container","spacing","map","image","index","item","xs","src","alt","width","_c","$RefreshReg$"],"sources":["/Users/arminforoughi/Documents/socialScheduler/frontend/src/components/ImageGenerator/ImageGenerator.jsx"],"sourcesContent":["import React, { useState } from 'react';\nimport { TextField, Button, Paper, Typography, Grid } from '@mui/material';\nimport axios from 'axios';\n\nconst ImageGenerator = () => {\n  const [prompt, setPrompt] = useState('');\n  const [images, setImages] = useState([]);\n  const [loading, setLoading] = useState(false);\n\n  const generateImage = async () => {\n    setLoading(true);\n    try {\n      const response = await axios.post('/api/images/generate', { prompt });\n      setImages(response.data.images);\n    } catch (error) {\n      console.error('Error generating image:', error);\n    }\n    setLoading(false);\n  };\n\n  return (\n    <Paper style={{ padding: '20px', maxWidth: '800px', margin: '20px auto' }}>\n      <Typography variant=\"h5\" gutterBottom>\n        Image Generator\n      </Typography>\n      <TextField\n        fullWidth\n        label=\"Describe the image you want to create\"\n        value={prompt}\n        onChange={(e) => setPrompt(e.target.value)}\n        margin=\"normal\"\n        multiline\n        rows={3}\n      />\n      <Button\n        variant=\"contained\"\n        onClick={generateImage}\n        disabled={loading}\n        style={{ marginTop: '20px' }}\n      >\n        Generate Image\n      </Button>\n      <Grid container spacing={2} style={{ marginTop: '20px' }}>\n        {images.map((image, index) => (\n          <Grid item xs={6} key={index}>\n            <img src={image} alt={`Generated ${index}`} style={{ width: '100%' }} />\n          </Grid>\n        ))}\n      </Grid>\n    </Paper>\n  );\n};\n\nexport default ImageGenerator; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}