{"ast":null,"code":"var _jsxFileName = \"/Users/arminforoughi/Documents/socialScheduler/frontend/src/components/VideoGenerator/VideoGenerator.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Paper, Typography, Grid, Card, CardMedia, Button, CircularProgress, Box, TextField } from '@mui/material';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst VideoGenerator = () => {\n  _s();\n  const [availableImages, setAvailableImages] = useState([]);\n  const [selectedImage, setSelectedImage] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [generatedVideo, setGeneratedVideo] = useState(null);\n  const [caption, setCaption] = useState('');\n  useEffect(() => {\n    fetchLocalImages();\n  }, []);\n  const fetchLocalImages = async () => {\n    try {\n      const response = await axios.get('/api/images/local');\n      setAvailableImages(response.data.images.map((url, index) => ({\n        id: index,\n        url: url\n      })));\n    } catch (error) {\n      console.error('Error fetching images:', error);\n    }\n  };\n  const handleImageSelect = image => {\n    setSelectedImage(image);\n  };\n  const handleGenerateVideo = async () => {\n    if (!selectedImage) {\n      alert('Please select an image');\n      return;\n    }\n    if (!caption.trim()) {\n      alert('Please enter a caption for the video');\n      return;\n    }\n    setLoading(true);\n    try {\n      const formData = new FormData();\n      formData.append('image_paths', selectedImage.url);\n      formData.append('caption', caption);\n      const response = await axios.post('/api/videos/generate', formData, {\n        headers: {\n          'Content-Type': 'multipart/form-data'\n        }\n      });\n      setGeneratedVideo(response.data.video_url);\n    } catch (error) {\n      console.error('Error generating video:', error);\n      alert('Error generating video');\n    }\n    setLoading(false);\n  };\n  return /*#__PURE__*/_jsxDEV(Paper, {\n    style: {\n      padding: '20px',\n      maxWidth: '1200px',\n      margin: '20px auto'\n    },\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h5\",\n      gutterBottom: true,\n      children: \"AI Video Generator (Novita)\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      mb: 4,\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h6\",\n        gutterBottom: true,\n        children: \"1. Select an Image\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        spacing: 2,\n        children: availableImages.map(image => /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 6,\n          sm: 4,\n          md: 3,\n          children: /*#__PURE__*/_jsxDEV(Card, {\n            onClick: () => handleImageSelect(image),\n            style: {\n              cursor: 'pointer',\n              border: (selectedImage === null || selectedImage === void 0 ? void 0 : selectedImage.id) === image.id ? '2px solid #1976d2' : 'none'\n            },\n            children: /*#__PURE__*/_jsxDEV(CardMedia, {\n              component: \"img\",\n              height: \"160\",\n              image: image.url,\n              alt: `Image ${image.id}`,\n              style: {\n                objectFit: 'cover'\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 93,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 15\n          }, this)\n        }, image.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      mb: 4,\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h6\",\n        gutterBottom: true,\n        children: \"2. Enter Caption\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        fullWidth: true,\n        multiline: true,\n        rows: 2,\n        value: caption,\n        onChange: e => setCaption(e.target.value),\n        placeholder: \"Enter a caption for your video...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      variant: \"contained\",\n      onClick: handleGenerateVideo,\n      disabled: loading || !selectedImage || !caption.trim(),\n      style: {\n        marginBottom: '20px'\n      },\n      children: loading ? /*#__PURE__*/_jsxDEV(CircularProgress, {\n        size: 24\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 20\n      }, this) : 'Generate AI Video'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 7\n    }, this), generatedVideo && /*#__PURE__*/_jsxDEV(Box, {\n      mt: 4,\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h6\",\n        gutterBottom: true,\n        children: \"Generated Video\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"video\", {\n        controls: true,\n        width: \"100%\",\n        style: {\n          maxWidth: '600px'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"source\", {\n          src: generatedVideo,\n          type: \"video/mp4\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 13\n        }, this), \"Your browser does not support the video tag.\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"outlined\",\n        href: generatedVideo,\n        download: true,\n        style: {\n          marginTop: '10px'\n        },\n        children: \"Download Video\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 5\n  }, this);\n};\n_s(VideoGenerator, \"RndHyE6mx4z3T1KEuBdeTOSWjcU=\");\n_c = VideoGenerator;\nexport default VideoGenerator;\nvar _c;\n$RefreshReg$(_c, \"VideoGenerator\");","map":{"version":3,"names":["React","useState","useEffect","Paper","Typography","Grid","Card","CardMedia","Button","CircularProgress","Box","TextField","axios","jsxDEV","_jsxDEV","VideoGenerator","_s","availableImages","setAvailableImages","selectedImage","setSelectedImage","loading","setLoading","generatedVideo","setGeneratedVideo","caption","setCaption","fetchLocalImages","response","get","data","images","map","url","index","id","error","console","handleImageSelect","image","handleGenerateVideo","alert","trim","formData","FormData","append","post","headers","video_url","style","padding","maxWidth","margin","children","variant","gutterBottom","fileName","_jsxFileName","lineNumber","columnNumber","mb","container","spacing","item","xs","sm","md","onClick","cursor","border","component","height","alt","objectFit","fullWidth","multiline","rows","value","onChange","e","target","placeholder","disabled","marginBottom","size","mt","controls","width","src","type","href","download","marginTop","_c","$RefreshReg$"],"sources":["/Users/arminforoughi/Documents/socialScheduler/frontend/src/components/VideoGenerator/VideoGenerator.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport {\n  Paper,\n  Typography,\n  Grid,\n  Card,\n  CardMedia,\n  Button,\n  CircularProgress,\n  Box,\n  TextField,\n} from '@mui/material';\nimport axios from 'axios';\n\nconst VideoGenerator = () => {\n  const [availableImages, setAvailableImages] = useState([]);\n  const [selectedImage, setSelectedImage] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [generatedVideo, setGeneratedVideo] = useState(null);\n  const [caption, setCaption] = useState('');\n\n  useEffect(() => {\n    fetchLocalImages();\n  }, []);\n\n  const fetchLocalImages = async () => {\n    try {\n      const response = await axios.get('/api/images/local');\n      setAvailableImages(response.data.images.map((url, index) => ({\n        id: index,\n        url: url\n      })));\n    } catch (error) {\n      console.error('Error fetching images:', error);\n    }\n  };\n\n  const handleImageSelect = (image) => {\n    setSelectedImage(image);\n  };\n\n  const handleGenerateVideo = async () => {\n    if (!selectedImage) {\n      alert('Please select an image');\n      return;\n    }\n\n    if (!caption.trim()) {\n      alert('Please enter a caption for the video');\n      return;\n    }\n\n    setLoading(true);\n    try {\n      const formData = new FormData();\n      formData.append('image_paths', selectedImage.url);\n      formData.append('caption', caption);\n\n      const response = await axios.post('/api/videos/generate', formData, {\n        headers: {\n          'Content-Type': 'multipart/form-data',\n        },\n      });\n\n      setGeneratedVideo(response.data.video_url);\n    } catch (error) {\n      console.error('Error generating video:', error);\n      alert('Error generating video');\n    }\n    setLoading(false);\n  };\n\n  return (\n    <Paper style={{ padding: '20px', maxWidth: '1200px', margin: '20px auto' }}>\n      <Typography variant=\"h5\" gutterBottom>\n        AI Video Generator (Novita)\n      </Typography>\n\n      <Box mb={4}>\n        <Typography variant=\"h6\" gutterBottom>\n          1. Select an Image\n        </Typography>\n        <Grid container spacing={2}>\n          {availableImages.map((image) => (\n            <Grid item xs={6} sm={4} md={3} key={image.id}>\n              <Card \n                onClick={() => handleImageSelect(image)}\n                style={{ \n                  cursor: 'pointer',\n                  border: selectedImage?.id === image.id ? '2px solid #1976d2' : 'none'\n                }}\n              >\n                <CardMedia\n                  component=\"img\"\n                  height=\"160\"\n                  image={image.url}\n                  alt={`Image ${image.id}`}\n                  style={{ objectFit: 'cover' }}\n                />\n              </Card>\n            </Grid>\n          ))}\n        </Grid>\n      </Box>\n\n      <Box mb={4}>\n        <Typography variant=\"h6\" gutterBottom>\n          2. Enter Caption\n        </Typography>\n        <TextField\n          fullWidth\n          multiline\n          rows={2}\n          value={caption}\n          onChange={(e) => setCaption(e.target.value)}\n          placeholder=\"Enter a caption for your video...\"\n        />\n      </Box>\n\n      <Button\n        variant=\"contained\"\n        onClick={handleGenerateVideo}\n        disabled={loading || !selectedImage || !caption.trim()}\n        style={{ marginBottom: '20px' }}\n      >\n        {loading ? <CircularProgress size={24} /> : 'Generate AI Video'}\n      </Button>\n\n      {generatedVideo && (\n        <Box mt={4}>\n          <Typography variant=\"h6\" gutterBottom>\n            Generated Video\n          </Typography>\n          <video\n            controls\n            width=\"100%\"\n            style={{ maxWidth: '600px' }}\n          >\n            <source src={generatedVideo} type=\"video/mp4\" />\n            Your browser does not support the video tag.\n          </video>\n          <Button\n            variant=\"outlined\"\n            href={generatedVideo}\n            download\n            style={{ marginTop: '10px' }}\n          >\n            Download Video\n          </Button>\n        </Box>\n      )}\n    </Paper>\n  );\n};\n\nexport default VideoGenerator; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}